name: Docker

on:
  push:
    branches:
      - main
    tags:
      - "v*.*.*"
  pull_request:
    branches:
      - main

jobs:
  build-and-push-images:
    name: Build Docker images and Push to GitHub Container-Registry
    runs-on: ubuntu-20.04
    permissions:
      contents: read
      packages: write

    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        if: github.event_name != 'pull_request'
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set DIR_NAME and IMAGE_NAME (devcontainer-base)
        run: |
          DIR_NAME=devcontainer-base
          echo "DIR_NAME=$DIR_NAME" >> $GITHUB_ENV
          echo "IMAGE_NAME=gantsign/$DIR_NAME" >> $GITHUB_ENV

      - # Add support for more platforms with QEMU (optional)
          # https://github.com/docker/setup-qemu-action
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - # create a build kit builder instance
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract metadata (tags, labels) for Docker (devcontainer-base)
        id: meta_base
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
          labels: |
            org.opencontainers.image.title=Development Container Base
            org.opencontainers.image.description=Base container image for development

      - name: Build and push Docker image (devcontainer-base)
        uses: docker/build-push-action@v5
        with:
          context: ${{ env.DIR_NAME }}
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta_base.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          no-cache: ${{ github.event_name != 'pull_request' }}

      - name: Set DIR_NAME and IMAGE_NAME (devcontainer-dind)
        run: |
          DIR_NAME=devcontainer-dind
          echo "DIR_NAME=$DIR_NAME" >> $GITHUB_ENV
          echo "IMAGE_NAME=gantsign/$DIR_NAME" >> $GITHUB_ENV

      - name: Extract metadata (tags, labels) for Docker (devcontainer-dind)
        id: meta_dind
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
          labels: |
            org.opencontainers.image.title=Development Container DinD
            org.opencontainers.image.description=Container image for development with Docker-in-Docker

      - name: Build and push Docker image (devcontainer-dind)
        uses: docker/build-push-action@v5
        with:
          context: ${{ env.DIR_NAME }}
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta_base.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          no-cache: ${{ github.event_name != 'pull_request' }}

      - name: Set DIR_NAME and IMAGE_NAME (devcontainer-k8s)
        run: |
          DIR_NAME=devcontainer-k8s
          echo "DIR_NAME=$DIR_NAME" >> $GITHUB_ENV
          echo "IMAGE_NAME=gantsign/$DIR_NAME" >> $GITHUB_ENV

      - name: Extract metadata (tags, labels) for Docker (devcontainer-k8s)
        id: meta_k8s
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
          labels: |
            org.opencontainers.image.title=Development Container K8s
            org.opencontainers.image.description=Container image for development with Kubernetes (K3s)

      - name: Build and push Docker image (devcontainer-k8s)
        uses: docker/build-push-action@v5
        with:
          context: ${{ env.DIR_NAME }}
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta_base.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          no-cache: ${{ github.event_name != 'pull_request' }}

      - name: Build and push Docker image (devcontainer-python3.9)
        uses: devcontainers/ci@v0.3
        with:
          subFolder: devcontainer-python3.9
          imageName: istvano/devcontainer-python
